{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Parent","useState","buttons","setButtons","btnClick","setBtnClick","cards","updateCards","searchValue","setSearchValue","orginalData","setOrginalData","useEffect","console","log","axios","get","then","json","data","blog","type","placeholder","id","onBlur","e","target","value","onChange","onClick","updateValues","filter","item","authorname","toLowerCase","includes","slug","map","className","btnOnClick","btncards","title","description","small_image","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,4BC8EAA,EAtEA,WACb,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCF,mBAAS,MAA1C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAqCN,mBAAS,IAA9C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAmCR,mBAAS,IAA5C,mBAAOS,EAAP,KAAmBC,EAAnB,KACAC,qBAAU,WACPC,QAAQC,IAAI,uBAGbC,IAAMC,IAAI,kDACXC,MAAK,SAAAC,GACJf,EAAWe,EAAKC,SAGlBJ,IAAMC,IAAI,mCACTC,MAAK,SAAAG,GACJT,EAAeS,EAAKD,MACpBZ,EAAYa,EAAKD,WACf,IAsBJP,qBAAU,WACRC,QAAQC,IAAI,2BAOd,OAAQ,gCACN,uBAAOO,KAAK,SAASC,YAAY,WAAWC,GAAG,aAAaC,OAAQ,SAACC,GAAD,OAAKA,EAAEC,OAAOC,MAAM,IAAIC,SAAU,SAACH,GAAD,OAAKhB,EAAegB,EAAEC,OAAOC,UAAS,wBAAQE,QAhBrI,WACf,IAAMC,EAAepB,EAAYqB,QAAO,SAACC,GAAD,OACxCA,EAAKC,WAAWC,cAAcC,SAAS3B,EAAY0B,gBAAgBF,EAAKI,KAAKF,cAAcC,SAAS3B,EAAY0B,kBAChH3B,EAAYuB,IAagI,oBAC5I,8BAEC5B,EAAQmC,KAAI,SAACL,GAAD,OACX,qBAAKM,UAAWlC,IAAa4B,EAAKT,GAAK,iBAAiB,UAAWM,QAAS,YAVjE,SAACN,GACdlB,EAAYkB,GACZ,IAAMgB,EAAa7B,EAAYqB,QAAO,SAACC,GAAD,OAAQA,EAAKT,IAAMA,KACzDhB,EAAYgC,GAOuEC,CAASR,EAAKT,KAA/F,SAAoHS,EAAKS,OAAfT,EAAKT,SAChH,qBAAKe,UAAU,WAAf,SACGhC,EAAM+B,KAAI,gBAAEJ,EAAF,EAAEA,WAAWS,EAAb,EAAaA,YAAoBC,GAAjC,EAAyBpB,GAAzB,EAA4Ba,KAA5B,EAAiCO,aAAYF,EAA7C,EAA6CA,MAA7C,OACZ,sBAAKH,UAAU,OAAf,UACE,qBAAKM,IAAKD,IACV,6BAAKF,IACL,4BAAIR,IACJ,4BAAIS,gBCzDGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d94d9edd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, { Component,PureComponent, useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\n\n\n\nconst Parent = () => {\n  const [buttons , setButtons] = useState([]);\n  const [btnClick , setBtnClick] = useState(null);\n  const [cards,updateCards] = useState([]);\n  const [searchValue,setSearchValue] = useState('')\n  const [orginalData,setOrginalData]=useState([])\n  useEffect(()=>{\n     console.log('component did mount')\n    //  fetch('https://jsonplaceholder.typicode.com/photos')\n    //  .then(response => response.json())\n    axios.get('https://api.edyoda.com/v1/blog/postcategories/')\n  .then(json => {\n    setButtons(json.data)\n  })\n\n  axios.get('https://api.edyoda.com/v1/blog/')\n  .then(blog => {\n    setOrginalData(blog.data)\n    updateCards(blog.data)\n  })},[])\n  \n  // const postData=()=>{\n  //    axios({\n  //      method:\"delete\",\n  //      url:\"https://jsonplaceholder.typicode.com/posts/1\",\n  //     //  data:{\n  //     //   userId: 1,\n  //     //   id: 1,\n  //     //   title: \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n  //     //   body: \"body\"\n  //     //  }\n  //    }).then(res=> console.log(res))\n  // }\n\n  const onSearch = ()=>{\n    const updateValues = orginalData.filter((item)=>\n    item.authorname.toLowerCase().includes(searchValue.toLowerCase())||item.slug.toLowerCase().includes(searchValue.toLowerCase()))\n    updateCards(updateValues)\n    \n  }\n  \n  useEffect(()=>{\n    console.log('component did update') \n  })\n  const btncards=(id)=>{\n    setBtnClick(id)\n    const btnOnClick = orginalData.filter((item)=>item.id == id)\n    updateCards(btnOnClick);\n  }\n  return (<div>\n    <input type=\"search\" placeholder=\"search..\" id=\"search-box\" onBlur={(e)=>e.target.value=''} onChange={(e)=>setSearchValue(e.target.value)}/><button onClick={onSearch}>search</button>\n    <div>\n      {/* <button onClick={()=>postData()}>on hit</button> */}\n    {buttons.map((item)=>\n      <div className={btnClick === item.id ? \"buttons active\":\"buttons\"} onClick={()=>{btncards(item.id)}} key={item.id}>{item.title}</div>)}</div>\n     <div className=\"cardWrap\">\n      { cards.map(({authorname,description,id,slug,small_image,title})=>\n      <div className=\"card\">\n        <img src={small_image}/>\n        <h5>{title}</h5>\n        <p>{authorname}</p>\n        <p>{description}</p>\n      </div>\n      \n      )}</div>\n    \n    </div>\n    );\n  }\n \nexport default Parent;\n\n// const Child = ({count}) => {\n//   const [childCount,updateChildCount] = useState(count)\n//   useEffect(()=>{\n//     if(count <=5)\n//     updateChildCount(count)\n//   },[count])\n  \n//   return (<div>\n//     <h2>Child - {childCount}</h2>\n//   </div>  );\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}